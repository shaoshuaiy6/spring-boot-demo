#默认配置
server:
  port: 8080
spring:
  profiles:
    active: dev
---
#开发环境配置
server:
  port: 8081
spring:
  profiles: dev
---
#测试环境配置
server:
  port: 8082
spring:
  profiles: test
---
#生产环境配置
server:
  port: 80
spring:
  profiles: prd
---
logging:
  config: classpath:config/log4j2.xml
---
#数据库连接配置以及数据源的相关配置
spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/ee19_spring_day02?characterEncoding=utf-8&serverTimezone=GMT%2B8
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    initial-size: 8
    min-idle: 1
    max-active: 20
    max-wait: 60000
    time-between-eviction-runsMillis: 60000
    min-evictable-idle-timeMillis: 300000
    validation-query: select 'x' FROM DUAL
    test-while-idle: true
    test-on-borrow: false
    test-on-return: false
    pool-prepared-statements: true
    max-open-prepared-statements: 20
    max-pool-prepared-statement-per-connection-size: 20
    filters: stat,wall,log4j2
    connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    use-global-data-source-stat: true
---
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml
---
#配置redis
spring:
  redis:
    ###Redis数据库索引（默认为0）
    database: 0
    host: 127.0.0.1
    port: 6379
    password: 123456
    jedis:
      pool:
        ###连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        ###连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        ###连接池中的最大空闲连接
        max-idle: 5
        ###连接池中的最小空闲连接
        min-idle: 0
    ###连接超时时间（毫秒）
    timeout: 10000
---
spring:
  rabbitmq:
    ####连接地址
    host: 127.0.0.1
    ####端口号
    port: 5672
    ####账号
    username: guest
    ####密码
    password: guest
    virtual-host: /
    ###消息发送到交换机确认机制,是否确认回调
    publisher-confirms: true
    publisher-returns: true
---
#spring:
#  thymeleaf:
#    cache: false
#    suffix: .html
#    encoding: UTF-8
#    mode: HTML5
#    servlet:
#      content-type: text/html

---
spring:
   data:
     elasticsearch:
       ### spring.data.elasticsearch.cluster-name Elasticsearch    集群名。(默认值: elasticsearch)
       cluster-name: my-application
       ### spring.data.elasticsearch.cluster-nodes    集群节点地址列表，用逗号分隔。如果没有指定，就启动一个客户端节点。
       ### spring.data.elasticsearch.propertie     用来配置客户端的额外属性
       ### spring.data.elasticsearch.repositories.enabled     开启 Elasticsearch 仓库。(默认值:true。)
       cluster-nodes: 192.168.31.224:9300
       repositories:
         enabled: true
---
spring:
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
#devtools:
#  livereload:
#    enabled: true #是否支持livereload
#    port: 35729
#  restart:
#    enabled: true #是否支持热部署
